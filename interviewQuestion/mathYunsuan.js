/*
一。转字符串：
String()
总结：
① 空数组转字符串为 ""
③ 非空数组去掉[],组成一个字符串
② 对象转字符串为 "[object Object]"
应用：一、遇到 + 时，如果两边的类型不都是数字或字符串的时候，会进行一定的类型转换，优先考虑转换为字符串并连接。

二。转数值
Number()
Number("") // 0
Number(null) // 0
Number("123") // 123
Number("123","456") // 123
Number(true) // 1
Number(false) // 0
Number("1,2,yys") // NaN
总结：
数组、对象和函数,就先转换为字符串，再从字符串转为Number，如果字符串里包含非数字，则Number返回NaN
应用：一元正号（+）运算符位于其操作数前面，计算其操作数的数值，如果操作数不是一个数值，会尝试将其转换成一个数值。
如果被转换的是对象，则会遵循对象到原始值的转换规则转换为原始值，依次选择 valueOf 和 toString 方法进行转换。

三、转布尔值
Boolean(0) // false
Boolean(123) // true

总结以下数据类型转Boolean时，都返回true：
① 非空字符串
② 非零数值
③ 数组
④ 对象
⑤ 函数
这三个是个特例，他们比较特殊：
a) null==undefined为true；
b) null和undefined不会进行数据转换；
c) NaN不与任何值相等，甚至包括它自己！

比较应用 == 或者 ===
应用1：若==两边其中一个数据类型为（数值，布尔值），会将==两边都都先转为数值类型，再进行比较
应用2：“!” 为逻辑非，在操作非布尔值类型的数据时，会将该数据类型先转换为布尔值后再取反
关于其他数据类型转布尔值，以下均返回true：
① 非空字符串
② 非零数值
③ 数组
④ 对象
⑤ 函数

隐式转换技巧图：
                         布尔
                          v
对象,数组，函数>>>字符串>>>数值

*/
